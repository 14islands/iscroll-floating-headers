{"name":"Floating Headers for iScroll","body":"\r\nOur goal was to get as close as possible to the native feel of the UITableView's floating headers using HTML5.\r\n\r\n\r\n## Demo\r\nDon't just take our word for it, [check out the DEMO on your mobile device](http://jsbin.com/iscroll-floating-headers/14)\r\n\r\n\r\n## Compability and Device Support\r\nWe test on the following devices and mobile browsers:\r\n\r\n### Mobile browsers:\r\n * Mobile Safari on iOS 4 and upwards\r\n * Chrome on iOS 5 and upwards\r\n * Chrome on Android (ICS)\r\n * Android Browser since Gingerbread\r\n\r\n### A-grade devices:\r\n * iPhone 4GS (iOS5)\r\n * iPhone 4G  (iOS5)\r\n * iPhone 3GS (iOS5)\r\n * iPad 3     (iOS5)\r\n * iPad 2     (iOS5)\r\n * Galaxy S3  (Ice Cream Sandwich)\r\n * Galaxy S2  (Gingerbread)\r\n * NEXUS S    (Jelly Bean)\r\n\r\n### B grade devices (works but device performance is bad):\r\n * iPhone 3G       (iOS4)\r\n * Galaxy Tab 10.1 (Honeycomb)\r\n\r\n\r\n## Usage\r\nInclude `iscroll_floating_headers.js` after `iscroll.js` in your JavaScript bundle or on your HTML page.\r\nInclude `iscroll_floating_headers.css` in your HTML `<head>` to enable the default skin used in the demo.\r\n\r\n### HTML\r\nCreate a normal HTML list for your content and wrap it in a container. \r\n\r\nAdd the style class `i4-ui-list to the scroll container to enable the default style. The default style assumes you have an unordered list.\r\n\r\nAdd `<header>` elements in your list where you want floating headers.\r\n\r\n```html\r\n<div id=\"myList\" class=\"i4-ui-list\">\r\n\t<ul>\r\n\t\t<header>C</header>\r\n\t\t<li>Special Agent Dale Cooper</li>\r\n\t\t<header>J</header>\r\n\t\t<li>Hank Jennings</li>\r\n\t\t<li>Leo Johnson</li>\r\n\t\t<li>Shelly Johnson</li>\r\n\t\t<header>H</header>\r\n\t\t<li>Donna Hayward </li>\r\n\t\t<li>Audrey Horne</li>\r\n\t\t<li>Benjamin Horne</li>\r\n\t\t<li>Big Ed Hurley</li>\r\n\t\t<header>P</header>\r\n\t\t<li>Jocelyn Packard</li>\r\n\t\t<li>Leland Palmer</li>\r\n\t\t<header>C</header>\r\n\t\t<li>Special Agent Dale Cooper</li>\r\n\t\t<header>J</header>\r\n\t\t<li>Hank Jennings</li>\r\n\t\t<li>Leo Johnson</li>\r\n\t\t<li>Shelly Johnson</li>\r\n\t\t<header>H</header>\r\n\t\t<li>Donna Hayward </li>\r\n\t\t<li>Audrey Horne</li>\r\n\t\t<li>Benjamin Horne</li>\r\n\t\t<li>Big Ed Hurley</li>\r\n\t\t<header>P</header>\r\n\t\t<li>Jocelyn Packard</li>\r\n\t\t<li>Leland Palmer</li>\r\n\t</ul>\r\n</div>\r\n```\r\n\r\n### Javascript\r\nInstantiate the list and pass in the scroll container DOM element. The first element in the container will be scrolled - this should be your list.\r\n\r\n```javascript\r\nnew iScrollFloatingHeaders( document.getElementById('myList') )\r\n```\r\nThat's it, no fancy configuration, it just works. \r\n\r\n_If you haven't used iScroll before, consider reading the \"Getting Started\" section of the [iScroll documentation](http://cubiq.org/iscroll-4)_\r\n\r\n\r\n## Requirements\r\nThere's a hard dependency on iScroll. It has currently only been tested with the latest stable version of Zepto.\r\n* iScroll 4.2.2\r\n* Zepto.js 1.0rc1\r\n\r\nPlease let us know if you successfully use older versions of the above libraries.\r\n\r\n## API\r\nThe list has a number of useful public methods:\r\n* `refresh()`\r\nMust be called whenever the content length changes.\r\n* `scrollTo(pos, delay = 0)`\r\nAnimate a scroll to the specified Y-position with an optional delay before scroll occurs.\r\n* `scrollToTop(delay = 0)`\r\nAnimate a scroll to the top of the list with an optional delay before scroll occurs.\r\n* `scrollToElement(el, delay = 0)`\r\nAnimate a scroll to the specified list element with an optional delay before scroll occurs.\r\n_Differs from the standard iScroll function in that it will try to scroll the element into the center of the viewport._\r\n\r\n\r\n## Planned features\r\n* Quickscroll - an index that appears as a bar on the right hand side of the table (for example, \"a\" through \"z\"). You can touch a particular label to jump to the target section.\r\n\r\n\r\n## Implementation details\r\nWe use iScroll since the native `-webkit-overflow-scroll: touch;` scrolling on iOS5 only updates the Y-pos while a finger is touching the screen, thus making it impossible to position floating headers during a scroll momentum/bounce-back. Any ideas on how to make this work using just native scrolling are more than welcome!\r\n\r\nFloating Headers for iScroll is developed by [14islands](http://14islands.com) (Twitter: [@14islands](https://twitter.com/14islands)). \r\n\r\nLicenced under the MIT licence. We welcome comments, feedback and suggestions. Please feel free to raise an issue or pull request. Enjoy!\r\n","google":"UA-31151822-2","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A fast glitch-free implementation of floating / sticky headers for iScroll"}